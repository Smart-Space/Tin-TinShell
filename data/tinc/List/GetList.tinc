/操作列表

/head_function
$ LIST_GETLIST_INIT []{
print [list\getlist.tinc]
print [-GetListUnit]
print [-GetList]
print [-AddList]
print [-SetList]
print [-]
}


/获取列表，重新命名
/new_name: the new name that haven't been used
/old_name: the name of the list witch is used
$ GetList [%new_name%|%old_name%]{
py_eval[
on='%old_name%'
name='%new_name%'
if on not in list_glo.keys():
    error('\nthere is no list named '+on)
else:
    list_glo.update({name:list_glo.get(on)})
]
}


/获取列表的一个值，其实为0，最后为-1
/list: the name of a list
/num: the numTH unit of the list witch named arg-list
$ GetListUnit [%list%|%num%]{
py_eval[
li='%list%'
num=%num%#必须是数字
if li not in list_glo.keys():
    error('\nthere is no list named '+li)
else:
    li=list_glo.get(li)
    if len(li)<num:
        error('\nthe more asked than the units of the list')
    else:
        reword=li[num]
        glo.update({'returnword':reword})
]
}

/合并列表
/new: 新的列表名称
/list1: 第一个列表
/list2: 第二个列表
$ AddList [%new%|%list1%|%list2%]{
py_eval[
li1='%list1%'
li2='%list2%'
new='%new%'
if li1 not in list_glo.keys():
    error('\nthere is no list named '+li1)
else:
    l1=list_glo.get(li1)
if li2 not in list_glo.keys():
    error('\nthere is no list named '+li2)
else:
    l2=list_glo.get(li2)
list_glo.update({new:l1+l2})
]
}

/列表去重
/name: 列表名称
$ SetList [%name%]{
py_eval[
name='%name%'
if name not in list_glo.keys():
    error('\nthere is no list named '+name)
else:
    li=list_glo.get(name)
list_glo.update({name:list(set(li))})
]
}